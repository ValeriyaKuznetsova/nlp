7. Cosine similarity and sentence comparison



1) Реализуем вычисление косинусного подобия на абстрактных данных. Формулу косинусного подобия можно взять из слайдов. Разберём на примере. 
Есть два набора данных: (1, 0, 0) и (1, 6, 1). Каждое число – это отдельное "событие" или "слово", если хотите.
Преобразуем наши данные в словари частот. Это удобно сделать с помощью питоновского Counter'а:

>>> from collections import Counter
>>> Counter((1, 0, 0))
Counter({0: 2, 1: 1})
>>> Counter((1, 6, 1))
Counter({1: 2, 6: 1})

Реализуем вычисление косинусного подобия в виде функции cos_sim(counts_dict1, counts_dict2)

Согласно формуле, в числителе перемножим частоты каждого события в двух словарях частот. У нас есть три уникальных события в двух словарях: 0, 1 и 6. Сумма произведений частот будет равна:
2 * 0 + 1 * 2 + 0 * 1 = 2
В знаменателе у нас перемножаются квадратные корни из сумм квадратов частот в первом и втором словаре, соответственно:
sqrt(2 ** 2 + 1 ** 2) * sqrt(2 ** 2 + 1 ** 2) = 5 (Питон даёт 5.000000000000001)
Делим числитель на знаменатель:
2 / 5.000000000000001 = 0.3999999999999999

Таким образом, косинусная близость для словарей частот {0: 2, 1: 1} и {1: 2, 6: 1}: 0.3999999999999999

Вот тесты для проверки работы функции:
cos_sim(Counter((1, 0, 0)), Counter((1, 6, 1)))
0.3999999999999999
cos_sim(Counter((0, 1, 2)), Counter((1, 6, 1)))
0.5163977794943222
cos_sim(Counter((1, 0, 0)), Counter((0, 1, 2)))
0.7745966692414834



2) Реализуем вычисление косинусного подобия предложений, представленных в виде мешка слов. Саму функцию cos_sim менять не нужно, но нужно написать функцию bag_of_words для превращения предложения в мешок слов:

sen1
The cat is on the mat.
sen2
The cat is on the chair.
sen3
I bought a new chair.

bow1
Counter({'the': 2, 'cat': 1, 'is': 1, 'on': 1, 'mat': 1})
bow2
Counter({'the': 2, 'cat': 1, 'is': 1, 'on': 1, 'chair': 1})
bow3
Counter({'i': 1, 'bought': 1, 'a': 1, 'new': 1, 'chair': 1})

Тогда:

cos_sim(bow1, bow2)
0.8749999999999998
cos_sim(bow1, bow3)
0.0
cos_sim(bow2, bow3)
0.15811388300841897