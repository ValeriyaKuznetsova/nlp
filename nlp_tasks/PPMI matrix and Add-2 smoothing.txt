PPMI matrix and Add-2 smoothing


3) Реализуем PPMI для матрицы слово-контекст

Возьмём уже заданную матрицу counts слово-контекст, представленную в Питоне как словарь словарей:

{'апельсин': {'вкусный': 1,
              'данные': 0,
              'компьютер': 0,
              'результат': 0,
              'сладкий': 1},
 'информация': {'вкусный': 0,
                'данные': 6,
                'компьютер': 1,
                'результат': 4,
                'сладкий': 0},
 'цифровой': {'вкусный': 0,
              'данные': 1,
              'компьютер': 2,
              'результат': 1,
              'сладкий': 0},
 'яблоко': {'вкусный': 1,
            'данные': 0,
            'компьютер': 1,
            'результат': 0,
            'сладкий': 1}}
			
Сумма всех частот: 20

Как рассчитать PPMI, чтобы заменить каждое число в матрице (=частоту совместной встречаемости) на PPMI-score? Формулу можно взять из слайдов. Разберём пример.

PPMI - это логарифм от дроби. 

В числителе дроби – вероятность встречи двух слов, например, "информация" и "данные", или, по-другому, вероятность встречи слово-контекст ("информация" - слово, "данные" - контекст). Обозначим эту вероятность как p_wc. Она рассчитывается как частота совместной встречи, т.е. соответствующая ячейка матрицы: counts["информация"]["данные"], делённая на сумму всех частот в матрице. Тогда: 
p_wc("информация", "данные", counts, total_counts)
6 / 20 = 0.3

В знаменателе дроби - произведение вероятности слова на вероятность контекста. Вероятность слова рассчитывается как его общая частота (во всех контекстах), делённая на сумму всех частот в матрице. Вероятность контекста рассчитывается как общая частота контекста, делённая на сумму всех частот в матрице. Таким образом, в одном случае мы суммируем ряд в матрице, в другом случае – столбец. Например:
p_w("информация", counts, total_counts)
11 / 20 = 0.55
p_c("данные", counts, total_counts)
7 / 20 = 0.35

Для расчёта PMI делим числитель на знаменатель и берём от результата логарифм (например, с основанием 2):
pmi("информация", "данные", counts, total_counts)
log2(0.3 / (0.55 * 0.35)) = 0.6401040549136171

PPMI отличается только тем, что негативные значения PMI заменяются на 0. Но в рассматриваемом примере PPMI = PMI.

Ещё тесты:
pmi("информация", "данные", counts, total_counts)
0.6401040549136171
pmi("информация", "результат", counts, total_counts)
0.5405683813627028
ppmi("информация", "результат", counts, total_counts)
0.5405683813627028
pmi("информация", "компьютер", counts, total_counts)
-1.137503523749935
ppmi("информация", "компьютер", counts, total_counts)
0



4) Реализуем сглаживание Add-2. Для этого нужно к числу в каждой ячейке прибавить 2, как в примере ниже:

{'апельсин': {'вкусный': 1,
              'данные': 0,
              'компьютер': 0,
              'результат': 0,
              'сладкий': 1},
 'информация': {'вкусный': 0,
                'данные': 6,
                'компьютер': 1,
                'результат': 4,
                'сладкий': 0},
 'цифровой': {'вкусный': 0,
              'данные': 1,
              'компьютер': 2,
              'результат': 1,
              'сладкий': 0},
 'яблоко': {'вкусный': 1,
            'данные': 0,
            'компьютер': 1,
            'результат': 0,
            'сладкий': 1}}

counts_add2
{'апельсин': {'вкусный': 3,
              'данные': 2,
              'компьютер': 2,
              'результат': 2,
              'сладкий': 3},
 'информация': {'вкусный': 2,
                'данные': 8,
                'компьютер': 3,
                'результат': 6,
                'сладкий': 2},
 'цифровой': {'вкусный': 2,
              'данные': 3,
              'компьютер': 4,
              'результат': 3,
              'сладкий': 2},
 'яблоко': {'вкусный': 3,
            'данные': 2,
            'компьютер': 3,
            'результат': 2,
            'сладкий': 3}}