8. Information retrieval

1) Binary (boolean) search + Inverted index

Реализовать простой бинарный поиск по прилагаемой тестовой коллекции новостных текстов. Бинарный поиск – документ либо подходит, либо не подходит. Написать функции:

def all_df():
	"""Функция строит обратный индекс, в котором каждому термину соответствует упорядоченный в порядке возрастания список номеров документов, в которых хотя бы один раз упоминается данный термин.
	Функция возвращает индекс в виде словаря следующего вида:
	{'term1': [doc_id1, doc_id2, doc_id3, ...],
	 'term2': [doc_id1, doc_id2, ...],
	 ...}
	"""


Примечание: построенный индекс можно сохранить в файл с помощью модуля pickle, тогда не нужно будет при каждом запуске скрипта заново строить индекс, достаточно будет просто загрузить его из файла. Впрочем, при эффективной реализации алгоритма построение обратного индекса на данной тестовой коллекции должно занимать около 3-5 секунд.
	

def boolean_search():
	"""Функция просит пользователя ввести поисковый запрос с клавиатуры. После этого функция выводит на экран список номеров документов, в каждом из которых встречается каждое из слов в запросе. Например:
	
	# на нелемматизированной коллекции
	Введите запрос: путин трамп
	13, 97, 98
	Введите запрос: путин обама
	13, 97
	Введите запрос: япония курильские острова
	25
	Введите запрос: губка боб квадратные штаны
	*ничего не найдено*
	
	# на лемматизированной коллекции
	Введите запрос: путин трамп
	13, 21, 39, 92, 97, 98
	Введите запрос: путин обама
	13, 21, 97, 98
	Введите запрос: япония курильские острова
	25, 26
	Введите запрос: губка боб квадратные штаны
	*ничего не найдено*
	"""
	

